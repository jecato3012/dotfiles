#+TITLE: Neovim config
#+AUTHOR: jecato3012
#+PROPERTY: header-args :tangle init.lua
#+AUTO_TANGLE: t
#+STARTUP: showverything

* Table of contents :toc:
- [[#about-neovim][About neovim]]
- [[#base][Base]]

* About neovim
- API is first-class: discoverable, versioned, documented.
- MessagePack structured communication enables extensions in any language.
- Remote plugins run as co-processes, safely and asynchronously.
- GUIs, IDEs, web browsers can --embed Neovim as an editor or script host.
- Lua plugins are easy to create just like Vimscript plugins. Your config can live in init.lua!
- AST-producing parsing engine enables faster, more accurate syntax highlighting, code navigation, refactoring, text objects, and motions.

#+CAPTION: Screenshot neovim
#+ATTR_HTML: :width 800 :alt Alacritty Scrot :title Alacritty Scrot :align left;
[[./images/screenshot-nvim.png]]
* Base
#+BEGIN_SRC lua
vim.g.mapleader = " "
vim.g.maplocalleader = " "

local opt = vim.opt

opt.autowrite = true
opt.clipboard = "unnamedplus"
opt.completeopt = "menu,menuone,noselect"
opt.conceallevel = 3
opt.confirm = true
opt.cursorline = true
opt.expandtab = true
opt.formatoptions = "jcroqlnt"
opt.grepformat = "%f:%l:%c:%m"
opt.grepprg = "rg --vimgrep"
opt.ignorecase = true
opt.inccommand = "nosplit"
opt.laststatus = 0
opt.list = true
opt.mouse = "a"
opt.number = true
opt.pumblend = 10
opt.pumheight = 10
opt.relativenumber = true
opt.scrolloff = 4
opt.sessionoptions = { "buffers", "curdir", "tabpages", "winsize" }
opt.shiftround = true
opt.shiftwidth = 2
opt.shortmess:append({ W = true,I = true,c = true })
opt.showmode = false
opt.sidescrolloff = 8
opt.signcolumn = "yes"
opt.smartcase = true
opt.smartindent = true
opt.spelllang = { "en" }
opt.splitbelow = true
opt.splitright = true
opt.tabstop = 2
opt.termguicolors = true
opt.timeoutlen = 300
opt.undofile = true
opt.undolevels = 300
opt.updatetime = 200
opt.wildmode = "longest:full,full"
opt.winminwidth = 5
opt.wrap = false

if vim.fn.has("nvim-0.9.0") == 1 then
  opt.splitkeep = "screen"
  opt.shortmess:append({ C=true })
end

vim.g.markdown_recommended_style = 0
#+END_SRC
